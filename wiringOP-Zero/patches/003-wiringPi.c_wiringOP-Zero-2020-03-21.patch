--- a/wiringPi/wiringPi.c	2022-01-13 23:50:18.000000000 +0200
+++ b/wiringPi/wiringPi.c	2022-01-28 13:20:08.936664746 +0200
@@ -89,7 +89,7 @@
 // Mask for the bottom 64 pins which belong to the Banana Pro
 //	The others are available for the other devices
 
-#define	PI_GPIO_MASK	(0xFFFFFFC0)
+#define	PI_GPIO_MASK	(0xFFFFFC00)	//0xFFFFFC00
 
 struct wiringPiNodeStruct *wiringPiNodes = NULL ;
 
@@ -199,9 +199,17 @@
 
 /*add for BananaPro by LeMaker team*/
 // for mmap BananaPro 
-#define	MAX_PIN_NUM		(0x40)  //64
+#define	MAX_PIN_NUM		(0x0180)  // 384
 #define SUNXI_GPIO_BASE (0x01C20800)
-#define MAP_SIZE	(4096*2)
+
+/* Allwinner H3 SoCs pinctrl R_PIO driver.
+ * /drivers/pinctrl/sunxi/pinctrl-sun8i-h3-r.c
+ * Port L(PL): 12 input/output port (PL0, ..., PL11)
+ * Gpio-352 ... Gpio-363 */
+#define SUNXI_R_PIO_OFFSET (0x2E2400) // SUNXI_GPIO_BASE + SUNXI_R_PIO_OFFSET = 0x01F02C00
+/* END Allwinner H3 SoCs pinctrl R_PIO driver. */
+
+#define MAP_SIZE	(4096*4)
 #define MAP_MASK	(MAP_SIZE - 1)
 //sunxi_pwm
 #define SUNXI_PWM_BASE (0x01c20e00)
@@ -296,7 +304,7 @@
 // sysFds:
 //	Map a file descriptor from the /sys/class/gpio/gpioX/value
 
-static int sysFds [300] =
+static int sysFds [384] =
 {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
@@ -627,27 +635,41 @@
 // 00 - 31 = PA00-PA31
 // 32 - 63 = PB00-PB31
 // 64 - 95 = PC00-PC31
-static int pinToGpio_BP [64] =
+static int pinToGpio_BP [384] =
 {
-   1,  7,    // 0, 1
-   0,  3,    // 2, 3
-  19, 18,    // 4  5
-   2,  6,    // 6, 7
-  12, 11,    // 8, 9
-  13, 10,    //10,11
-  15, 16,    //12,13
-  14,198,    //14,15
- 199, -1,    //16,17
-  -1, -1,    //18,19
+   0,  1,    // 0, 1
+   2,  3,    // 2, 3
+  -1, -1,    // 4  5
+   6,  7,    // 6, 7
+  -1, -1,    // 8, 9
+  10, 11,    //10,11
+  12, 13,    //12,13
+  14, 15,    //14,15
+  16, 17,    //16,17
+  18, 19,    //18,19
   -1, -1,    //20,21
   -1, -1,    //22,23
   -1, -1,    //24,25
   -1, -1,    //26,27
   -1, -1,    //28,29
-  17, -1,    //30,31
+  -1, -1,    //30,31
 
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // ... 47
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,// ... 63
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, //PC
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, //PD
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, //PE
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, //PF
+  -1,-1,-1,-1,-1,-1,
+ 198,199,	// wpi gpio-198, gpio-199
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,			    //PG
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, //PH
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, //PI
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, //PJ
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, //PK
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+ 362,-1,	// wpi gpio-362
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,					    //PL
 } ;
 // changed by Christian Beckert
 
@@ -694,7 +716,7 @@
 
 
 // changed by Christian Beckert
-static int physToGpio_BP [64] =
+static int physToGpio_BP [384] =
 {
   -1,          // 0
   
@@ -712,7 +734,7 @@
   14,    13,   //23, 24
   -1,    10,   //25, 26
   
-  17,    -1,   //27, 28 //LEDs
+  17,   362,   //27, 28 // 17-RED-LEDs, 362-PWR-LEDs
   
   
   -1,    -1,   //29, 30
@@ -722,7 +744,17 @@
   -1,    -1,   //37, 38
   -1,    -1,   //39, 40
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, //41-> 55
-   -1, -1, -1, -1, -1, -1, -1, -1 // 56-> 63
+   -1, -1, -1, -1, -1, -1, -1, -1, // 56-> 63
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, //127
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, //255
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
+  -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, //383
 } ;
 // changed by Christian Beckert
 
@@ -984,7 +1016,9 @@
  int index = pin - (bank << 5);
  int offset = ((index - ((index >> 3) << 3)) << 2);
  uint32_t reval=0;
- uint32_t phyaddr = SUNXI_GPIO_BASE + (bank * 36) + ((index >> 3) << 2);
+ uint32_t r_pio=0;
+ if ( bank == 11 ) r_pio = SUNXI_R_PIO_OFFSET - (bank * 36);
+ uint32_t phyaddr = SUNXI_GPIO_BASE + r_pio + (bank * 36) + ((index >> 3) << 2); // printf(" 1-%s pin:%d, bank:%d index:%d offset:%d phyaddr:0x%x\n",__func__, pin , bank,index,offset,phyaddr);
  if (wiringPiDebug)
 		printf("func:%s pin:%d,  bank:%d index:%d phyaddr:0x%x\n",__func__, pin , bank,index,phyaddr); 
 	if(BP_PIN_MASK[bank][index] != -1)
@@ -1011,7 +1045,9 @@
  int bank = pin >> 5;
  int index = pin - (bank << 5);
  int offset = ((index - ((index >> 3) << 3)) << 2);
- uint32_t phyaddr = SUNXI_GPIO_BASE + (bank * 36) + ((index >> 3) << 2);
+ uint32_t r_pio=0;
+ if ( bank == 11 ) r_pio = SUNXI_R_PIO_OFFSET - (bank * 36);
+ uint32_t phyaddr = SUNXI_GPIO_BASE + r_pio + (bank * 36) + ((index >> 3) << 2); // printf(" 2-%s pin:%d, MODE:%d bank:%d index:%d offset:%d phyaddr:0x%x\n",__func__, pin , mode,bank,index,offset,phyaddr); 
 	if (wiringPiDebug)
 		printf("func:%s pin:%d, MODE:%d bank:%d index:%d phyaddr:0x%x\n",__func__, pin , mode,bank,index,phyaddr); 
 	if(BP_PIN_MASK[bank][index] != -1)
@@ -1085,7 +1121,9 @@
 	 uint32_t regval = 0;
 	 int bank = pin >> 5;
 	 int index = pin - (bank << 5);
-	 uint32_t phyaddr = SUNXI_GPIO_BASE + (bank * 36) + 0x10; // +0x10 -> data reg
+	 uint32_t r_pio=0;
+	 if ( bank == 11 ) r_pio = SUNXI_R_PIO_OFFSET - (bank * 36);
+	 uint32_t phyaddr = SUNXI_GPIO_BASE + r_pio + (bank * 36) + 0x10; // printf(" 3-%s pin:%d, value:%d bank:%d index:%d phyaddr:0x%x\n",__func__, pin , value,bank,index,phyaddr);
 	   if (wiringPiDebug)
 			printf("func:%s pin:%d, value:%d bank:%d index:%d phyaddr:0x%x\n",__func__, pin , value,bank,index,phyaddr); 
 	 if(BP_PIN_MASK[bank][index] != -1)
@@ -1123,14 +1161,19 @@
 	uint32_t regval = 0;
 	int bank = pin >> 5;
 	int index = pin - (bank << 5);
-	uint32_t phyaddr = SUNXI_GPIO_BASE + (bank * 36) + 0x10; // +0x10 -> data reg
+	uint32_t r_pio=0;
+	if ( bank == 11 ) r_pio = SUNXI_R_PIO_OFFSET - (bank * 36);
+	uint32_t phyaddr = SUNXI_GPIO_BASE + r_pio + (bank * 36) + 0x10; // printf(" 4-%s pin:%d,bank:%d index:%d phyaddr:0x%x\n",__func__, pin,bank,index,phyaddr);
 	if (wiringPiDebug)
 			printf("func:%s pin:%d,bank:%d index:%d phyaddr:0x%x\n",__func__, pin,bank,index,phyaddr);
 	if(BP_PIN_MASK[bank][index] != -1)
 	{
 		regval = readl(phyaddr);
+//	printf("**1** read reg val: %#x,bank:%d,index:%d,line:%d\n",regval,bank,index,__LINE__); // test
 		regval = regval >> index;
+//	printf("**2** read reg val: %#x,bank:%d,index:%d,line:%d\n",regval,bank,index,__LINE__); // test
 		regval &= 1;
+//	printf("**3** read reg val: %#x,bank:%d,index:%d,line:%d\n",regval,bank,index,__LINE__); // test
 		if (wiringPiDebug)
 			printf("***** read reg val: 0x%x,bank:%d,index:%d,line:%d\n",regval,bank,index,__LINE__);
 	 	return regval;
@@ -1149,7 +1192,9 @@
 	 int index = pin - (bank << 5);
 	 int sub = index >> 4;
 	 int sub_index = index - 16*sub;
-	 uint32_t phyaddr = SUNXI_GPIO_BASE + (bank * 36) + 0x1c + sub*4; // +0x10 -> pullUpDn reg
+	 uint32_t r_pio=0;
+	 if ( bank == 11 ) r_pio = SUNXI_R_PIO_OFFSET - (bank * 36);
+	 uint32_t phyaddr = SUNXI_GPIO_BASE + r_pio + (bank * 36) + 0x1c + sub*4; // printf(" 5-%s pin:%d,bank:%d index:%d sub:%d phyaddr:0x%x\n",__func__, pin,bank,index,sub,phyaddr); 
 	   if (wiringPiDebug)
 			printf("func:%s pin:%d,bank:%d index:%d sub:%d phyaddr:0x%x\n",__func__, pin,bank,index,sub,phyaddr); 
 	 if(BP_PIN_MASK[bank][index] != -1)
@@ -1493,7 +1538,7 @@
 
 int wpiPinToGpio (int wpiPin)
 {
-  return pinToGpio_BP [wpiPin & 63] ;
+  return pinToGpio_BP [wpiPin] ; // wpiPin & 384
 }
 
 
@@ -1506,7 +1551,7 @@
 
 int physPinToGpio (int physPin)
 {
-  return physToGpio_BP [physPin & 63] ;
+  return physToGpio_BP [physPin] ; // physPin & 384
 }
 
 /*
@@ -1561,7 +1606,9 @@
 {
   int fSel, shift, alt ;
 
-  pin &= 63 ;
+  pin &= 511 ; // printf("the pin-d:%d \n",pin);
+     if (wpiPinToGpio (pin) == -1)
+	return 0 ;
    /*add for BananaPro by LeMaker team*/
 	if(BPRVER == version)
 	{
@@ -1789,8 +1836,8 @@
 
 // Minimum pin base is 64
 
-  if (pinBase < 64)
-    (void)wiringPiFailure (WPI_FATAL, "wiringPiNewNode: pinBase of %d is < 64\n", pinBase) ;
+  if (pinBase < 384)
+    (void)wiringPiFailure (WPI_FATAL, "wiringPiNewNode: pinBase of %d is < 384\n", pinBase) ;
 
 // Check all pins in-case there is overlap:
 
@@ -1829,7 +1876,7 @@
 
 void pinEnableED01Pi (int pin)
 {
-  pin = pinToGpio_BP [pin & 63] ;
+  pin = pinToGpio_BP [wpiPin] ; // wpiPin & 384
 }
 #endif
 
@@ -1929,7 +1976,7 @@
 				}
 				else if (mode == PWM_OUTPUT)
 				{
-					  if(pin != 259)
+					  if ((pin != 5) || (pin != 6))	// H2+(PWM0-PA5), H3(PWM0-PA5, PWM1-PA6)
 					  {
 						   printf("the pin you choose is not surport hardware PWM\n");
 						   printf("you can select PI3 for PWM pin\n");
@@ -2096,6 +2143,8 @@
 int digitalRead (int pin)
 {
   char c ;
+     if (wpiPinToGpio (pin) == -1)
+	return 0 ;
   struct wiringPiNodeStruct *node = wiringPiNodes ;
 
 	/*add for BananaPro by LeMaker team*/
@@ -2632,8 +2681,8 @@
   char  c ;
   int   bcmGpioPin ;
 
-  if ((pin < 0) || (pin > 63))
-    return wiringPiFailure (WPI_FATAL, "wiringPiISR: pin must be 0-63 (%d)\n", pin) ;
+  if ((pin < 0) || (pin > 383))
+    return wiringPiFailure (WPI_FATAL, "wiringPiISR: pin must be 0-383 (%d)\n", pin) ;
 
   /**/ if (wiringPiMode == WPI_MODE_UNINITIALISED)
     return wiringPiFailure (WPI_FATAL, "wiringPiISR: wiringPi has not been initialised. Unable to continue.\n") ;
@@ -2867,7 +2916,7 @@
   int   fd ;
   int   boardRev ;
   int   model, rev, mem, maker, overVolted ;
-  memset(&sysFds, -1, sizeof(int)*300); // Initialize the filedescriptor - table all to -1
+  memset(&sysFds, -1, sizeof(int)*384); // Initialize the filedescriptor - table all to -1
 
   if (getenv (ENV_DEBUG) != NULL)
     wiringPiDebug = TRUE ;
@@ -3101,7 +3150,7 @@
 //	the 'value' interface to speed things up for later
     if(BPRVER == boardRev)    /*modify for BananaPro by LeMaker team*/
 	{
-	  for (pin = 1 ; pin < 32 ; ++pin)
+	  for (pin = 1 ; pin < 384 ; ++pin)
 	  {
 		sprintf (fName, "/sys/class/gpio/gpio%d/value", pin) ;
 		sysFds [pin] = open (fName, O_RDWR) ;
@@ -3109,7 +3158,7 @@
 	}
   else
   {
-	  for (pin = 0 ; pin < 64 ; ++pin)
+	  for (pin = 0 ; pin < 384 ; ++pin)
 	  {
 	    sprintf (fName, "/sys/class/gpio/gpio%d/value", pin) ;
 	    sysFds [pin] = open (fName, O_RDWR) ;
